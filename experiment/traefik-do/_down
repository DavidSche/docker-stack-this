#!/usr/bin/env bash

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Print a helpful message if a pipeline with non-zero exit code causes the
# script to exit as described above.
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR

# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset

###############################################################################
# Functions
###############################################################################

# If needed, add permission to make this file executable | chmod +x start

CTN_traefik="tool_traefik_do"
CTN_portainer="tool_portainer"

# Remove services
echo; echo "Remove $CTN_traefik: "
docker service rm "$CTN_traefik"; sleep 1

echo; echo "Remove $CTN_portainer: "
docker service rm "$CTN_portainer"; sleep 1

docker stack rm toolweb; sleep 1

#echo; echo "Remove network ..."
#docker network rm ntw_front

#echo; echo "Clean up ..."
#docker system prune -f