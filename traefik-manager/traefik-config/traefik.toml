### traefik.toml

################################################################
### entryPoints
################################################################
defaultEntryPoints = ["http", "https"]

################################################################
### Option 1) Accepts request on port 80 and 443
################################################################
#[entryPoints]
#   [entryPoints.http]
#   address = ":80"
#   [entryPoints.https]
#   address = ":443"
#   [entryPoints.https.tls]


	################################################################
	### Option 1) Accepts request on port 80 and 443
	################################################################
	#[entryPoints]
	#   [entryPoints.http]
	#  	address = ":80"
	#  	[entryPoints.https]
	#  	address = ":443"
	#    [entryPoints.https.tls]

	################################################################
	### Option 2) Auto-redirect requests from port 80 to 443
	################################################################
	[entryPoints]
		[entryPoints.http]
		address = ":80"
		[entryPoints.http.redirect]
		entryPoint = "https"
		[entryPoints.https]
		address = ":443"


################################################################
### letsencrypt
################################################################
[acme]
email = "pascal@gmail.com"

# File or key used for certificates storage.
# WARNING, if you use Traefik in Docker, you have 2 options:
#  - create a file on your host and mount it as a volume
#      storageFile = "acme.json"
#      $ docker run -v "/my/host/acme.json:acme.json" traefik
#  - mount the folder containing the file as a volume
#      storageFile = "/etc/traefik/acme/acme.json"
#      $ docker run -v "/my/host/acme:/etc/traefik/acme" traefik
storage = "/etc/traefik/acme/acme.json"

# Enable on demand certificate. This will request a certificate from Let's Encrypt during the first TLS handshake for a hostname that does not yet have a certificate.
# WARNING, TLS handshakes will be slow when requesting a hostname certificate for the first time, this can leads to DoS attacks.
# WARNING, Take note that Let's Encrypt have rate limiting: https://letsencrypt.org/docs/rate-limits
onDemand = true

# Enable certificate generation on frontends Host rules. This will request a certificate from Let's Encrypt for each frontend with a Host rule. For example, a rule Host:test1.traefik.io,test2.traefik.io will request a certificate with main domain test1.traefik.io and SAN test2.traefik.io. Optional
onHostRule = true

# Entrypoint to proxy acme challenge/apply certificates to.
# WARNING, must point to an entrypoint on port 443
entryPoint = "https"

# CA server to use. Uncomment the line to run on the staging let's encrypt server
# Leave comment to go to prod. Optional
# caServer = "https://acme-staging.api.letsencrypt.org/directory"

# Domains list. You can provide SANs (alternative domains) to each main domain
# All domains must have A/AAAA records pointing to Traefik
# Each domain & SANs will lead to a certificate request. Let's Encrypt have rate limiting: https://letsencrypt.org/docs/rate-limits
#[[acme.domain]]
#main = "clusteralpha.tk"
#[[acme.domain]]
#main = "cloudwait.com.org"
#[[acme.domain]]
#main = "pascalandy.com"

# Leave comment to go to prod. Optional
#caServer = "https://acme-staging.api.letsencrypt.org/directory"

# Use a DNS based acme challenge rather than external HTTPS access, e.g. for a firewalled server
# Select the provider that matches the DNS domain that will host the challenge TXT record,
# and provide environment variables with access keys to enable setting it:
#  - cloudflare: CLOUDFLARE_EMAIL, CLOUDFLARE_API_KEY
#dnsProvider = "cloudflare"

# By default, the dnsProvider will verify the TXT DNS challenge record before letting ACME verify
# If delayDontCheckDNS is greater than zero, avoid this & instead just wait so many seconds.
# Useful if internal networks block external DNS queries. Optional
# delayDontCheckDNS = 0

# If true, display debug log messages from the acme client library, Optional
# acmeLogging = true

################################################################
### Web configuration backend
################################################################
[web]
address = ":8080"