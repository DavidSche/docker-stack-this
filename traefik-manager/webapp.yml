version: "3.1"

services:

  a-who:
    image: emilevauge/whoami
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=a-who"
        - "traefik.frontend.rule=PathPrefixStrip:/a-who"
        - "traefik.port=80"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"

  b-who:
    image: emilevauge/whoami
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=b-who"
        - "traefik.frontend.rule=PathPrefixStrip:/b-who"
        - "traefik.port=80"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"


  a-cad:
    image: abiosoft/caddy
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.backend=a-cad"
        - "traefik.frontend.rule=PathPrefixStrip:/a-cad"
        - "traefik.port=2015"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"

  b-cad:
    image: abiosoft/caddy
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.10'
          memory: 60M
        reservations:
          memory: 30M
      labels:
        - "traefik.backend=b-cad"
        - "traefik.frontend.rule=PathPrefixStrip:/b-cad"
        - "traefik.port=2015"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"

  a-gix:
    image: nginx:alpine
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]                                           
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.10'
          memory: 15M
        reservations:
          memory: 5M
      labels:
        - "traefik.backend=a-gix"
        - "traefik.frontend.rule=PathPrefixStrip:/a-gix"
        - "traefik.port=80"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"

  b-gix:
    image: nginx:alpine
    networks:
      - ntw_front
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]  
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.10'
          memory: 15M
        reservations:
          memory: 5M
      labels:
        - "traefik.backend=b-gix"
        - "traefik.frontend.rule=PathPrefixStrip:/b-gix"
        - "traefik.port=80"
        - "traefik.docker.network=ntw_front"
        - "traefik.backend.loadbalancer.method=wrr"

networks:
  ntw_front:
    external: true